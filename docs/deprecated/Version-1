# THE LAIR — Version 2 (Final Game Document)

by
**Iben Anoos · Gaille Amolong · Jamuel H. Bacus · Ilde Jan Figueras · Joseph Jimenez**

© 2025
All rights reserved.

---

## Storyline (Backstory)

In a world where magic is written in code and power is measured in logic, there stands the grand citadel of learning known as the **Cebu Institute of Technology University**.

To outsiders, it is only a school. To those within, it is a proving ground for digital pioneers.

A student arrives, ready to master the arcane arts of **Information Technology**. Their path is no ordinary education—it is a **legendary quest** through seven great trials. Each trial is defended by guardians of knowledge, instructors whose tests shape only the worthy into true mages of code.

The journey demands not only **logic** and **wisdom**, but resilience, creativity, and mastery over the hidden language of computation.

The first trial awaits. The quest for knowledge begins now.

---

## Game Structure

### Flow of Play

1. **Start Menu**

   * New Game → Pick a hero.
   * Exit Game.

2. **Character Selection**

   * Choose one of five heroes (Iben, Gaille, Jamuel, Ilde, Joseph).
   * Each with unique HP, Logic, Wisdom, and Skills.

3. **Trial Loop**

   * For each Guardian:

     * Short intro story.
     * Series of puzzles (3–5).
     * Final Guardian puzzle/battle.
   * After each trial:

     * Stage clear screen.
     * Stat boosts or skill triggers.

4. **Final Boss: The Dean**

   * Combines all mechanics.
   * Requires strategy, resource management, and luck.

5. **Ending**

   * Win: Graduate as “Master of Code.”
   * Lose: Expelled from the citadel.

---

## Core Mechanics

### Player Stats

* **HP (Health Points)** → Damage taken from mistakes. 0 = failure.
* **Logic** → Affects syntax-based puzzles.
* **Wisdom** → Affects conceptual/strategic puzzles.



### How Stats Work

Each character has **three main stats**: **HP, Logic, and Wisdom.** These determine survival, puzzle-solving, and progression.

#### 1. HP (Health Points)

* **Purpose:** Tracks endurance; mistakes reduce HP.
* **Impact:** 0 HP = fail (unless a survival skill activates).
* **Example:** Wrong answer vs Sir Serato’s puzzle → *Segmentation Fault* deals **-2 HP**.

---

#### 2. Logic

* **Purpose:** Accuracy in syntax and code structure.
* **Impact:** Higher Logic = better odds in syntax/loop/OOP puzzles.
* **Example:** Puzzle: *“Which loop always executes at least once?”* → Player Logic 3 vs Difficulty 2 = likely success.

---

#### 3. Wisdom

* **Purpose:** Foresight, strategy, understanding of abstract concepts.
* **Impact:** Higher Wisdom = advantage in recursion, algorithms, DBMS puzzles.
* **Example:** Puzzle: *“What is the Big-O of binary search?”* → Player Wisdom 4 vs Difficulty 3 = automatic success.

---

#### 4. Hybrid (Logic + Wisdom)

* **Purpose:** Some puzzles need both stats (esp. Dean’s trial).
* **Example:** Puzzle: *“Design a DFA for strings ending in 01.”* → Requires Logic 3 + Wisdom 3 vs Difficulty 


### Puzzle Types

* **Logic Puzzle** → Requires Logic check.
* **Wisdom Puzzle** → Requires Wisdom check.
* **Hybrid Puzzle** → Requires both.

### Puzzle Resolution

* Puzzle has **difficulty (1–6)**.
* Compare stat vs difficulty:

  * Equal/higher = success likely.
  * Lower = success possible with dice roll.
* Wrong answer = -1 or more HP (depending on Guardian).

### Skills

Each character has 3 unique skills, usable once per stage unless stated otherwise.
(See Version 1 character list — skills are final and active in gameplay.)

### Items (Optional for replayability)

* Healing Potion → +2 HP.
* Debugging Scroll → +1 Logic for next puzzle.

---

## Characters (Final Stats & Skills)

### Iben Anoos — *The Codebreaker*

* HP: 4 | Logic: 3 | Wisdom: 2
* Skills: Debugger’s Eye, Syntax Slayer, Loop Mastery.

### Gaille Amolong — *The Architect*

* HP: 5 | Logic: 2 | Wisdom: 3
* Skills: Second Chance, Blueprint Mind, Vision Realized.

### Jamuel Bacus — *The Tactician*

* HP: 3 | Logic: 2 | Wisdom: 4
* Skills: Recursive Insight, Strategist’s Gambit, Pattern Recognition.

### Ilde Jan Figueras — *The Challenger*

* HP: 6 | Logic: 1 | Wisdom: 2
* Skills: Iron Will, Overclocked Resolve, Berserker Coder.

### Joseph Jimenez — *The Balanced*

* HP: 4 | Logic: 2 | Wisdom: 2
* Skills: Jack of All Codes, Adaptive Learner, Steady Hand.

---

## Villains (Guardians of Trials)

### Ma’am Cathy — *Keeper of First Flames* (Loops & Conditionals)

* HP: 5 | Logic: 3 | Wisdom: 2
* Trial: Syntax-focused.
* Skill: Syntax Curse.

### Sir Khai — *Warden of Objects* (OOP)

* HP: 6 | Logic: 4 | Wisdom: 3
* Trial: Classes, inheritance, polymorphism.
* Skill: Null Reference.

### Sir Serato — *Guardian of Data* (DSA)

* HP: 7 | Logic: 5 | Wisdom: 3
* Trial: Stacks, queues, trees, graphs.
* Skill: Segmentation Fault.

### Ma’am Tulin — *Mistress of Networks* (DBMS)

* HP: 6 | Logic: 3 | Wisdom: 5
* Trial: Queries, schemas, normalization.
* Skill: Query Overload.

### The Dean — *Arbiter of Mastery* (Final Boss)

* HP: 10 | Logic: 6 | Wisdom: 6
* Trial: All + Automata, AI.
* Skills: Turing’s Judgement, Summon Instructor.

---

## Java Implementation (Blueprint)

### Key Classes

* `Game` → manages flow.
* `Character` → base class, extended by heroes.
* `Guardian` → base class for villains.
* `Puzzle` → stores question, type, difficulty, answer.
* `Battle` → runs puzzles, applies damage, skills.

### Pseudocode Example

```java
while (!gameOver) {
    showIntro();
    Character hero = chooseCharacter();
    for (Guardian g : guardians) {
        playTrial(hero, g);
        if (hero.hp <= 0) gameOver = true;
    }
    if (!gameOver) endGame(true);
    else endGame(false);
}
```

---

## Win / Lose Conditions

* **Victory** → Defeat Dean. Credits + Graduation ending.
* **Defeat** → HP = 0 with no survival skill left. Expelled ending.
